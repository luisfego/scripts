#!/bin/bash

if [ -z "$1" ] || [ -z "$2" ]; then
	cat <<-EOF
		usage: foliadora -f inputDir -o outputDir [OPTIONS]

		REQUIRED
		    -f, --files 		The directory containing th PDF files to add numbers (required).
		    -o, --output 		The directory to output the resulting files. If the dir is not found, then it will be automatically created (required).

		OPTIONS
		    -b, --batesStartFrom 	Number to start the page numbering from. 
		    -c, --fontColor		HEX value of the font color.
		    -d, --fontSize 		Font size in points.
		    -j, --existingOutput 	Policy to use when an output file with the same name already skips (options: overwrite, skip, fail). 
		    -l, --label 		Label to use.  
		    -t, --font 			Font to use. 
		    -x, --horizontalAlign 	Horizontal align (options: center, right, left).
		    -y, --verticalAlign 	Vertical align (options: top, bottom).
		
		The inputDir must only containf the PDF files you want to add page numbers to. Be sure to name them alphabetically in the order you want to add the page numbers. 
	EOF
else

	#SET DEFAULT VALUES
	offset=1
	overwrite="overwrite"
	font="Courier"
	color="FF0000"
	size=12
	x=right
	y=bottom
	label="Folio [BATES_NUMBER]"
	files=""
	out=""

	#replace default values
	while [[ $# -gt 1 ]]
	do
	key="$1"

	case $key in
		-f|--files)
		files="$2"
		shift # past argument
		;;
		-o|--output)
		out="$2"
		shift # past argument
		;;
		-b|--batesStartFrom)
		offset="$2"
		shift # past argument
		;;
		-j|--existingOutput)
		overwrite="$2"
		shift # past argument
		;;
		-t|--font)
		font="$2"
		shift # past argument
		;;
		-c|--fontColor)
		color="$2"
		shift # past argument
		;;
		-d|--fontSize)
		size="$2"
		shift # past argument
		;;
		-x|--horizontalAlign)
		x="$2"
		shift # past argument
		;;
		-y|--verticalAlign)
		y="$2"
		shift # past argument
		;;
		-l|--label)
		label="$2"
		shift # past argument
		;;
	esac
	shift # past argument or value
	done

	# Check for input dir
	if [ -z "$files" ]; then
		echo "ERROR: You must provide an input dir."
		exit
	elif [ -d "$files" ]; then 
		:
	else
		echo "ERROR: Not such directory ($files)"
		exit
	fi

	# Check for output dir
	if [ -z "$out" ]; then
		echo "ERROR: You must provide an input dir."
		exit
	elif [ -d "$out" ]; then 
		:
	else
		mkdir "$out"
		echo "Creating dir $out"
	fi

	if [ -z "$out" ]; then
		echo "ERROR: You must provide an output dir."
		exit
	fi

	# Do the magic
	echo $1
	for i in $files/*.pdf; do
		echo Adding page numbers to $(basename "$i")...
		sejda-console setheaderfooter -b $offset -j $overwrite -f "$i" -t $font -c $color -d $size -x $x -y $y -l "$label" -o $out > /dev/null

		plus=$(strings < "$i" | sed -n 's|.*/Count -\{0,1\}\([0-9]\{1,\}\).*|\1|p' | sort -rn | head -n 1)
		offset=$((offset+plus))
	done

	echo
	echo "Done!"
fi